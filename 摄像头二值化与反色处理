using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
 //===========调用的Emgu dll============
using Emgu.CV;  
using Emgu.CV.Structure;
using Emgu.Util;
using System.Threading;

namespace xx
{
    public partial class Form1 : Form
    {
        private Capture capture;
        private bool captureinprocess;   //判断摄像头的状态        
        
        public Form1()
        {
            InitializeComponent();
        }

        private void processfram(object sender, EventArgs arg)
        {
            //获取摄像头的视频帧:
            Image<Bgr, Byte> frame = capture.QueryFrame();
            imageBox1.Image = frame;            

            //将帧转换为RGB类型，对应为三维数组:
            Image<Bgr, Byte> f2 = frame.Convert<Bgr, Byte>();

            //在中心点画出一个小圆，在圆心处取出像素的RGB：
            int pw = frame.Width;
            int ph = frame.Height;
            PointF pf=new PointF(pw/2,ph/2);
            Bgr c0 = new Bgr(255, 0, 255);
            frame.Draw(new CircleF(pf,25),c0,1) ;
            this.Text = f2[pw/2, ph/2].Red + "," + f2[pw/2, ph/2].Green + "," + f2[pw/2, ph/2].Blue;

            //Image<Bgr, Byte> frame = capture.QueryFrame();//获取摄像头的视频帧
            //Image<Bgr, Byte> frame2 = frame.Convert<Bgr, Byte>(); //将帧转换为RGB类型，对应为三维数组
            //Image<Gray, Byte> grayFrame = frame.Convert<Gray, Byte>();//将帧转换为Gray类型，对应为一维数组
            //Image<Ycc, Byte> currentYCrCbFrame = frame.Convert<Ycc, Byte>();//将帧转换为YCbCr类型，对应为三维数组
            //Image<Gray, Byte> skin = new Image<Gray, Byte>(frame.Width, frame.Height);//构建灰度区域对象

            ////转换后，在pictureBox1上显示二值化图像:
            //int r = 0;
            //int g = 0;
            //int b = 0;
            //int rows = frame.Rows;
            //int cols = frame.Cols;
            //Byte[, ,] bgrData = f2.Data;

            //for (int i = 0; i < rows; i++)
            //    for (int j = 0; j < cols; j++)
            //    {
            //        b = bgrData[i, j, 0];
            //        g = bgrData[i, j, 1];
            //        r = bgrData[i, j, 2];
            //        if (b < 110)
            //        {
            //            bgrData[i, j, 0] = (byte)0;
            //            bgrData[i, j, 1] = (byte)0;
            //            bgrData[i, j, 2] = (byte)0;
            //        }
            //        else      //二值化:
            //        {
            //            bgrData[i, j, 0] = (byte)255;
            //            bgrData[i, j, 1] = (byte)255;
            //            bgrData[i, j, 2] = (byte)255;
            //        }
            //    }
            //    this.pictureBox1.Image = f2.Flip(Emgu.CV.CvEnum.FLIP.NONE).ToBitmap(); 

           //======???======
            //IntPtr Dyncontour = new IntPtr();//存放检测到的图像块的首地址
            //IntPtr Dynstorage = CvInvoke.cvCreateMemStorage(0);//开辟内存区域

            //Seq<Point> DyncontourTemp = new Seq<Point>(Dyncontour, null);//方便对IntPtr类型进行操作
            //for (; DyncontourTemp != null && DyncontourTemp.Ptr.ToInt32() != 0; DyncontourTemp = DyncontourTemp.HNext)
            //{
            //    CvInvoke.cvDrawContours(img3, DyncontourTemp, new MCvScalar(255, 255, 255), new MCvScalar(255, 255, 255), 0, 1, Emgu.CV.CvEnum.LINE_TYPE.EIGHT_CONNECTED, new Point(0, 0));
            //}

           //========反色处理==========
              Image<Bgr, Byte> img3 = frame.Convert<byte>(delegate(Byte b) { return (Byte)(255 - b); });
              this.pictureBox1.Image = img3.ToBitmap();
           //==============

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            imageBox1.Size = new Size(this.Size.Height, this.Size.Width);
            imageBox1.BackColor = Color.Black;
            this.Controls.Add(imageBox1);
        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            if (capture != null)//摄像头不为空
            {
                if (captureinprocess)
                {
                    Application.Idle -= new EventHandler(processfram);
                    this.Text = "摄像头已经停止";
                    button1.Text = "开始摄像";
                }
                else
                {
                    Application.Idle += new EventHandler(processfram);
                    this.Text = "摄像头已经启动";
                    button1.Text = "停止摄像";
                }
                captureinprocess = !captureinprocess;
            }
            else    //摄像头为空则通过Capture()方法调用
            {
                try
                {
                      capture = new Capture();
                }
                catch (NullReferenceException excpt)
                {
                      MessageBox.Show(excpt.Message);
                }
            }
        }
    }
}
